version: '3.7'

services:
  vault:
    user: "${UID}:${GID}"
    container_name: "vault"
    image: vault:1.9.7
    restart: on-failure
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN}
    expose:
      - "8200"
    ports:
      - "8200:8200"
    networks:
      - "gaia-x"
    volumes:
      - ./docker_data/vault/file:/vault/file
      - ./docker_data/vault/logs:/vault/logs
    
  postgres:
    user: "${UID}:${GID}"
    container_name: "postgres_merlot"
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      PGDATA: /var/lib/postgresql/data/pgdata
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - "gaia-x"
    volumes:
      - ./docker_data/postgres/data:/var/lib/postgresql/data

  neo4j:
    user: "${UID}:${GID}"
    container_name: "neo4j_merlot"
    image: neo4j:4.4.12
    environment:
      NEO4J_AUTH: "${GRAPH_STORE_USER}/${GRAPH_STORE_PASSWORD}"
      NEO4J_dbms_connector_http_listen__address: :7474
      NEO4J_dbms_connector_bolt_listen__address: :7687
      NEO4JLABS_PLUGINS: '["apoc", "graph-data-science", "n10s"]'
      NEO4J_dbms_security_procedures_unrestricted: gds.*,apoc.*,n10s.*
      NEO4J_dbms_security_procedures_allowlist: gds.*,apoc.*,n10s.*
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - "gaia-x"
    restart: on-failure
    command: neo4j
    volumes:
      - ./docker_data/neo4j/data:/data
      - ./docker_data/neo4j/logs:/logs

  server:
    user: "${UID}:${GID}"
    container_name: "fc-server_merlot"
    image: ghcr.io/merlot-education/gxfs-catalog:latest
    environment:
      KEYCLOAK_CREDENTIALS_SECRET: "${FC_CLIENT_SECRET}"
      KEYCLOAK_AUTH-SERVER-URL: "${KEYCLOAK_AUTH_SERVER_URL}"
      KEYCLOAK_REALM: "${KEYCLOAK_REALM}"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: "${ISSUER_URI}"
      SPRING_DATASOURCE_URL: "${DB_URL}"
      GRAPHSTORE_URI: "${GRAPH_STORE_URI}"
      GRAPHSTORE_USER: "${GRAPH_STORE_USER}"
      GRAPHSTORE_PASSWORD: "${GRAPH_STORE_PASSWORD}"
      FEDERATEDCATALOGUE_VERIFICATION_PARTICIPANT_TYPE: http://w3id.org/gaia-x/core#Participant
      FEDERATEDCATALOGUE_VERIFICATION_SERVICEOFFERING_TYPE: http://w3id.org/gaia-x/core#ServiceOffering
    ports:
      - "8081:8081"
    networks:
      - "gaia-x"
    extra_hosts:
      - "key-server:host-gateway"
      - "localhost:127.0.0.1"
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  keycloak:
    user: "${UID}:${GID}"
    container_name: "keycloak_merlot"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KC_HEALTH_ENABLED: true
    image: "quay.io/keycloak/keycloak:20.0.5"
    ports:
      - "8080:8080"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "--head","fsS", "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 2s
      retries: 15
    command:
      [
          'start-dev --import-realm --health-enabled=true'
      ]
    volumes:
      - ./docker_data/keycloak/data:/opt/keycloak/data
  
  rabbitmq:
    user: "${UID}:${GID}"
    container_name: "rabbitmq_merlot"
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    ports:
      - "9090:15672"
      - "5672:5672"
    networks:
      - "gaia-x"
    restart: on-failure
    hostname: rabbitmq-merlot
    volumes:
      - ./docker_data/rabbitmq:/var/lib/rabbitmq

  sd-creation-wizard-api:
    user: "${UID}:${GID}"
    container_name: "sd-creation-wizard-api"
    build:
      context: ../sd-creation-wizard-api
      dockerfile: Dockerfile
    ports:
      - "8085:8080"
    networks:
      - "gaia-x"
   
  contract-orchestrator:
    user: "${UID}:${GID}"
    container_name: "contract-orchestrator"
    build:
      context: ../contract-orchestrator
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:h2:file:/data/database.db"
    network_mode: "host"  
    volumes:
      - ./docker_data/contract-orchestrator/data:/data
    depends_on:
      keycloak:
        condition: service_healthy

  serviceoffering-orchestrator:
    user: "${UID}:${GID}"
    container_name: "serviceoffering-orchestrator"
    build:
      context: ../serviceoffering-orchestrator
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:h2:file:/data/database.db"
      KEYCLOAK_CLIENTSECRET: "${FC_CLIENT_SECRET}"
    network_mode: "host"  
    volumes:
      - ./docker_data/serviceoffering-orchestrator/data:/data
    depends_on:
      keycloak:
        condition: service_healthy

  organisations-orchestrator:
    user: "${UID}:${GID}"
    container_name: "organisations-orchestrator"
    build:
      context: ../organisations-orchestrator
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:h2:file:/data/database.db"
      KEYCLOAK_CLIENTSECRET: "${FC_CLIENT_SECRET}"
    network_mode: "host"  
    volumes:
      - ./docker_data/organisations-orchestrator/data:/data
    depends_on:
      keycloak:
        condition: service_healthy
 
  aaam-orchestrator:
    user: "${UID}:${GID}"
    container_name: "aaam-orchestrator"
    build:
      context: ../aaam-orchestrator
      dockerfile: Dockerfile
    network_mode: "host"  
    depends_on:
      keycloak:
        condition: service_healthy
    
  marketplace:
    user: "${UID}:${GID}"
    container_name: "marketplace"
    build:
      context: ../marketplace
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    networks:
      - "gaia-x"


networks:
  gaia-x:
    driver: "bridge"
